Run a SQL query for each of the following:

1. Display the information in one table (either table is fine).

SELECT * FROM employees;

1|Jim Jackson|Junior Engineer|100000|false|1
2|Batman Stephens|Engineer|120000|false|1
3|Keisha Franklin|Lead Engineer|150000|false|1
4|Asha Mohan|Sales|120000|true|2
5|Calvin Roche|Account Manager|120000|true|2
6|Sergio Chang|Account Executive|140000|false|2
7|Dr Splosions|Experimentalist|175000|false|3

2. Update an item that meets some condition (you can choose a condition that makes sense).

UPDATE employees SET recent_hire="false" WHERE recent_hire="true";

SELECT * FROM employees;

1|Jim Jackson|Junior Engineer|100000|false|1
2|Batman Stephens|Engineer|120000|false|1
3|Keisha Franklin|Lead Engineer|150000|false|1
4|Asha Mohan|Sales|120000|false|2
5|Calvin Roche|Account Manager|120000|false|2
6|Sergio Chang|Account Executive|140000|false|2
7|Dr Splosions|Experimentalist|175000|false|3

3. Display the information in both tables using one query.

SELECT * FROM employees, departments WHERE employees.department_id = departments.id;

1|Jim Jackson|Junior Engineer|100000|false|1|1|Engineering|Main
2|Batman Stephens|Engineer|120000|false|1|1|Engineering|Main
3|Keisha Franklin|Lead Engineer|150000|false|1|1|Engineering|Main
4|Asha Mohan|Sales|120000|false|2|2|Sales|Main
5|Calvin Roche|Account Manager|120000|false|2|2|Sales|Main
6|Sergio Chang|Account Executive|140000|false|2|2|Sales|Main
7|Dr Splosions|Experimentalist|175000|false|3|3|Experimental|Warehouse



4. Display a narrower selection of columns (fewer columns than all of them, in other words) from both tables using one query.

SELECT employees.name, employees.job_title, employees.salary, departments.name FROM employees JOIN departments ON employees.department_id = departments.id; 

Jim Jackson|Junior Engineer|100000|Engineering
Batman Stephens|Engineer|120000|Engineering
Keisha Franklin|Lead Engineer|150000|Engineering
Asha Mohan|Sales|120000|Sales
Calvin Roche|Account Manager|120000|Sales
Sergio Chang|Account Executive|140000|Sales
Dr Splosions|Experimentalist|175000|Experimental

5. Delete an item that meets some condition (you can choose a condition that makes sense).

DELETE FROM employees WHERE salary >= 170000;
//bye bye Dr Splosions :(

SELECT * FROM employees;

1|Jim Jackson|Junior Engineer|100000|false|1
2|Batman Stephens|Engineer|120000|false|1
3|Keisha Franklin|Lead Engineer|150000|false|1
4|Asha Mohan|Sales|120000|false|2
5|Calvin Roche|Account Manager|120000|false|2
6|Sergio Chang|Account Executive|140000|false|2

RELEASE 3

Different join commands and output:

SELECT * FROM employees LEFT JOIN departments ON employees.department_id = departments.id;

1|Jim Jackson|Junior Engineer|100000|false|1|1|Engineering|Main
2|Batman Stephens|Engineer|120000|false|1|1|Engineering|Main
3|Keisha Franklin|Lead Engineer|150000|false|1|1|Engineering|Main
4|Asha Mohan|Sales|120000|false|2|2|Sales|Main
5|Calvin Roche|Account Manager|120000|false|2|2|Sales|Main
6|Sergio Chang|Account Executive|140000|false|2|2|Sales|Main

SELECT * FROM employees RIGHT JOIN departments ON employees.department_id = departments.id; 

NOTE: Error: RIGHT and FULL OUTER JOINs not currently supported in sqlite3

SELECT * FROM employees INNER JOIN departments ON employees.department_id = departments.id;

1|Jim Jackson|Junior Engineer|100000|false|1|1|Engineering|Main
2|Batman Stephens|Engineer|120000|false|1|1|Engineering|Main
3|Keisha Franklin|Lead Engineer|150000|false|1|1|Engineering|Main
4|Asha Mohan|Sales|120000|false|2|2|Sales|Main
5|Calvin Roche|Account Manager|120000|false|2|2|Sales|Main
6|Sergio Chang|Account Executive|140000|false|2|2|Sales|Main

(note: same as left join since all current employee departments are in departments table)

SELECT * FROM employees INNER JOIN departments ON employees.department_id = departments.id WHERE employees.salary < 130000;

1|Jim Jackson|Junior Engineer|100000|false|1|1|Engineering|Main
2|Batman Stephens|Engineer|120000|false|1|1|Engineering|Main
4|Asha Mohan|Sales|120000|false|2|2|Sales|Main
5|Calvin Roche|Account Manager|120000|false|2|2|Sales|Main

SELECT employees.name, departments.name FROM employees LEFT JOIN departments ON employees.department_id=departments.id WHERE departments.name="Engineering";

Jim Jackson|Engineering
Batman Stephens|Engineering
Keisha Franklin|Engineering